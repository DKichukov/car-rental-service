services:
  db:
    image: postgres:14.0-alpine3.14
    container_name: postgres_db
    restart: on-failure
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - crs-network

  #### build app ####
  car-rental-service:
    container_name: crs-app
    build:
      context: ../
      dockerfile: Dockerfile
    image: crs-app
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:${DB_PORT}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db
    networks:
      - crs-network

  ## build angular app ###
  angular-app:
    container_name: angular-app
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    image: angular-app
    ports:
      - "4200:80"
    networks:
      - crs-network

volumes:
  db_data:

networks:
  crs-network:
